{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cosmoz-data-nav` provides a way to show each individual item of a list in a queue-style behavior\nto the user.\n\nA list of `items` and a `<template>` for each item is used to render the queue, and methods to\nslide to next/previous item is exposed.\n\nFor performance and to avoid DOM bloat, the items are \"lazy-rendered\" and the `maxPreload` setting\ndecides how many _upcoming_ items that should be pre-rendered.\n\nIt can also be \"lazy-loaded\" when each item's details aren't available, by instead of (or in addition to)\n`items` also set an `idList` array with identifiers for each item.\nIf `cosmoz-data-nav` tries to render an item that is missing but an id exists for the position, it will fire\na `need-data` event to announce this and expect an `object-details-fetched` event when the item details are\navailable. This event should have an `id` property that corresponds to the `id` requested and also an `object`\nproperty with the item. This design enables parallelization since multiple items can be requested at once,\nand responded to in an unordered, async manner. Also, `cosmoz-data-nav` does not need to be aware of any\ntemplate-design or item model.\n\nExample:\n\n\t\t<cosmoz-data-nav id-list=\"[[ getItemIds(myList) ]]\" on-need-data=\"triggerDetailFetch\">\n\t\t\t\t<template>\n\t\t\t\t\t\t<neon-animatable class=\"vertical layout fit\">\n\t\t\t\t\t\t\t\t<my-view>\n\t\t\t\t\t\t\t\t\t\t<paper-icon-button slot=\"actions\" disabled$=\"[[ isFirstItem ]]\" icon=\"chevron-left\" on-click=\"selectPrevious\"></paper-icon-button>\n\t\t\t\t\t\t\t\t\t\t<paper-icon-button slot=\"actions\" disabled$=\"[[ isLastItem ]]\" icon=\"chevron-right\" on-click=\"selectNext\"></paper-icon-button>\n\t\t\t\t\t\t\t\t</my-view>\n\t\t\t\t\t\t</neon-animatable>\n\t\t\t\t</template>\n\t\t</cosmoz-data-nav>",
      "summary": "",
      "path": "cosmoz-data-nav.js",
      "properties": [
        {
          "name": "t",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 20,
              "column": 3
            },
            "end": {
              "line": 25,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "_allInstances",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 1
            },
            "end": {
              "line": 438,
              "column": 2
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_allElementInstances",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 1
            },
            "end": {
              "line": 444,
              "column": 2
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_isVisible",
          "type": "?",
          "description": "True if the current element is visible.\n\t",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 871,
              "column": 1
            },
            "end": {
              "line": 873,
              "column": 2
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_elements",
          "type": "Array | null | undefined",
          "description": "The array of buffer elements.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 3
            },
            "end": {
              "line": 151,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "as",
          "type": "string | null | undefined",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 3
            },
            "end": {
              "line": 160,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"item\""
        },
        {
          "name": "indexAs",
          "type": "string | null | undefined",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 3
            },
            "end": {
              "line": 169,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"index\""
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "An array containing items from which a selection can be made.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 3
            },
            "end": {
              "line": 181,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_itemsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "queueLength",
          "type": "number | null | undefined",
          "description": "The length of items array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 3
            },
            "end": {
              "line": 190,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "hasItems",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 3
            },
            "end": {
              "line": 196,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "elementsBuffer",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 3
            },
            "end": {
              "line": 201,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "3"
        },
        {
          "name": "preload",
          "type": "number | null | undefined",
          "description": "Number of items after the currently selected one to preload.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 3
            },
            "end": {
              "line": 209,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "The currently selected index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 3
            },
            "end": {
              "line": 219,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateSelected\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "selectedNext",
          "type": "number | null | undefined",
          "description": "The index of the next element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 3
            },
            "end": {
              "line": 229,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "selectedElement",
          "type": "Object | null | undefined",
          "description": "The currently selected element (holder)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 3
            },
            "end": {
              "line": 239,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedInstance",
          "type": "Object | null | undefined",
          "description": "The currently selected element (instance)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 3
            },
            "end": {
              "line": 249,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object | null | undefined",
          "description": "The currently selected item, or `null` if no item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 3
            },
            "end": {
              "line": 259,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "maintainSelection",
          "type": "boolean | null | undefined",
          "description": "True if cosmoz-data-nav should try to maintain selection when\n`items` change.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 3
            },
            "end": {
              "line": 268,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectAttribute",
          "type": "string | null | undefined",
          "description": "The attribute that elements which control the `selected` of this element\nshould have. The value of the attribute can be `-1` or `+1`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 3
            },
            "end": {
              "line": 277,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"cosmoz-data-nav-select\""
        },
        {
          "name": "animating",
          "type": "boolean | null | undefined",
          "description": "True if the element is currently animating.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 3
            },
            "end": {
              "line": 286,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "reverse",
          "type": "boolean | null | undefined",
          "description": "True if selecting a element with a index smaller than the current one.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 3
            },
            "end": {
              "line": 295,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isIncompleteFn",
          "type": "Function | null | undefined",
          "description": "Function used to determine if a item is incomplete and needs to be preloaded.\nThe default values is a function that requires item to be a `Object`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 3
            },
            "end": {
              "line": 306,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        },
        {
          "name": "hashParam",
          "type": "string | null | undefined",
          "description": "The hash parameter to use for selecting an item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 3
            },
            "end": {
              "line": 313,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_routeHashParams",
          "type": "Object | null | undefined",
          "description": "The route hash parameters extracted by the `cosmoz-page-location`\nelement.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 3
            },
            "end": {
              "line": 321,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "idPath",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 3
            },
            "end": {
              "line": 329,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"id\""
        },
        {
          "name": "hiddenRendering",
          "type": "boolean | null | undefined",
          "description": "True if element should render items even if it is not visible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 3
            },
            "end": {
              "line": 337,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_argumentsToObject",
          "description": "Convert arguments to an object, skipping some argument.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 35,
              "column": 1
            },
            "end": {
              "line": 38,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "args",
              "type": "array",
              "description": "Arguments."
            },
            {
              "name": "skipnum",
              "type": "number",
              "description": "Argument number to skip."
            }
          ],
          "return": {
            "type": "object",
            "desc": "Resulting object with arguments."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "_arrayToObject",
          "description": "Convert an array to an object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 45,
              "column": 1
            },
            "end": {
              "line": 59,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "array",
              "type": "array",
              "description": "Array to convert."
            }
          ],
          "return": {
            "type": "object",
            "desc": "Resulting object."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "_ensureInitialized",
          "description": "Ensure mixin is initialized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 65,
              "column": 1
            },
            "end": {
              "line": 71,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "_",
          "description": "Convenience method for gettext. Translates a text.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 78,
              "column": 1
            },
            "end": {
              "line": 80,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "string",
              "description": "Translation key."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 1
            },
            "end": {
              "line": 359,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 1
            },
            "end": {
              "line": 385,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "gettext",
          "description": "Translates a text.\n\nExample of basic translation:\n`_(string, t)`\n <div>{{ _(‘My translation’, t) }}</div>\n\nExample of basic translation with interpolation:\n`_(string, [args], t)`\n <div>{{ _(‘Hello {0}’, user.name, t) }}</div>",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 115,
              "column": 1
            },
            "end": {
              "line": 117,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "string",
              "description": "Text to translate."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "gettextgeneric",
          "description": "Generic handler for text translation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 125,
              "column": 1
            },
            "end": {
              "line": 131,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "string",
              "description": "Text to translate."
            },
            {
              "name": "callerArgs",
              "type": "array",
              "description": "Arguments from the calling function."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "ngettext",
          "description": "Plural version of gettext. Translates a text to the current locale\nusing the first numeric argument after the two first arguments to\ndetermine if output should be singular or plural.\n\nExample of translation in singular or plural:\n`ngettext(singular, plural, count, t)`\n<div>{{ ngettext(‘My translation’,\n ‘My translations’, count, t) }}</div>\n\nExample of translation in singular or plural with interpolation:\n`ngettext(singular, plural, [count and other args], t)`\n<div>{{ ngettext(‘My translation for “{1}”’,\n ‘My {0} translations for “{1}”’, count, ‘hello’, t) }}</div>",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 151,
              "column": 1
            },
            "end": {
              "line": 169,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "singular",
              "type": "string",
              "description": "Singular text variant."
            },
            {
              "name": "plural",
              "type": "string",
              "description": "Plural text variant."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "pgettext",
          "description": "Translates a text using a specific context.\n\nExample of translation with context:\n`pgettext(context, ‘text’, t)`\n <div>{{ pgettext(‘Cancel Invoice’, ‘Cancel’, t) }}</div>\n\nExample of translation including context with interpolation:\n`pgettext(context, ‘text’, [args], t)`\n<div>{{ pgettext(‘Cancel Invoice’, ‘Cancel {0}’,\n document.type, t) }}</div>",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 186,
              "column": 1
            },
            "end": {
              "line": 194,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "string",
              "description": "Context text."
            },
            {
              "name": "key",
              "type": "string",
              "description": "Text to translate."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "npgettext",
          "description": "Translates a text in singular or plural with a specific context.\n\nExample of translation in singular or plural with context:\n`npgettext(context, singular, plural, count, t)`\n<div>{{ npgettext('Cancel invoice', ‘My cancellation’,\n ‘My {0} cancellations’, count, t) }}</div>\n\nExample of translation in singular or plural with context and\ninterpolation:\n`npgettext(context, singular, plural, count, t)`\n<div>{{ npgettext('Cancel invoice', ‘My {1} cancellation’,\n ‘My {0} {1} cancellations’, count, document.type, t) }}</div>",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 214,
              "column": 1
            },
            "end": {
              "line": 236,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "string",
              "description": "Context text."
            },
            {
              "name": "singular",
              "type": "string",
              "description": "Singular text variant."
            },
            {
              "name": "plural",
              "type": "string",
              "description": "Plural text variant."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Translated text."
          },
          "inheritedFrom": "translatable"
        },
        {
          "name": "_onTemplatesChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 1
            },
            "end": {
              "line": 410,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_templatize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 1
            },
            "end": {
              "line": 432,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elementTemplate"
            },
            {
              "name": "incompleteTemplate"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_forwardHostProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 1
            },
            "end": {
              "line": 452,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyInstanceProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 1
            },
            "end": {
              "line": 462,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inst"
            },
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 1
            },
            "end": {
              "line": 469,
              "column": 2
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createIncomplete",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 1
            },
            "end": {
              "line": 478,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "select",
          "description": "Selects an item by index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 1
            },
            "end": {
              "line": 493,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "The index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setItemById",
          "description": "Replace an id in the `items` element list with the full data of the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 1
            },
            "end": {
              "line": 523,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "type",
              "description": "The id currently stored in the `items` array"
            },
            {
              "name": "item",
              "type": "Object",
              "description": "The full data of object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearCache",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 1
            },
            "end": {
              "line": 527,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "removeFromCache",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 1
            },
            "end": {
              "line": 538,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_itemsChanged",
          "description": "Observes full changes to `items` properties\nand replaces cached items with full data if available.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 1
            },
            "end": {
              "line": 594,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "type",
              "description": "description"
            }
          ],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_realignElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 596,
              "column": 1
            },
            "end": {
              "line": 622,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelected",
          "description": "Observes changed to `selected` property and\nupdates related properties and the `selected` page.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 1
            },
            "end": {
              "line": 675,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "Number",
              "defaultValue": "this.selected",
              "description": "The selected property"
            },
            {
              "name": "previous",
              "type": "Number",
              "description": "The previous value of selected property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTransitionEnd",
          "description": "Handles `transitionend` event and cleans up animation classe and properties",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 683,
              "column": 1
            },
            "end": {
              "line": 693,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "TransitionEvent",
              "description": "The event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_preload",
          "description": "Preloads items that are not loaded depending on the currently\nselected item and the `preload` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 703,
              "column": 1
            },
            "end": {
              "line": 730,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "defaultValue": "this._preloadIdx",
              "description": "The index to preload from"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getBaseProps",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 732,
              "column": 1
            },
            "end": {
              "line": 738,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ]
        },
        {
          "name": "_getElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 740,
              "column": 1
            },
            "end": {
              "line": 746,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            },
            {
              "name": "_elements",
              "defaultValue": "this._elements"
            }
          ]
        },
        {
          "name": "_getInstance",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 748,
              "column": 1
            },
            "end": {
              "line": 754,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedElement"
            }
          ]
        },
        {
          "name": "_getItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 756,
              "column": 1
            },
            "end": {
              "line": 759,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            },
            {
              "name": "items",
              "defaultValue": "this.items"
            }
          ]
        },
        {
          "name": "_resetElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 761,
              "column": 1
            },
            "end": {
              "line": 793,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeInstance",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 795,
              "column": 1
            },
            "end": {
              "line": 800,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_synchronize",
          "description": "Syncronizes the `items` data with the created template instances\ndepending on the currently selected item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 807,
              "column": 1
            },
            "end": {
              "line": 827,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_onTap",
          "description": "Handle `tap` event and finds the closest item to the rootTarget that has a `selectAttribute` attribute.\nIf the attribute is `next` or `previous` the `selectNext` or `selectPrevious` action is called.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 836,
              "column": 1
            },
            "end": {
              "line": 866,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "The tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isDescendantOf",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 1
            },
            "end": {
              "line": 890,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            },
            {
              "name": "ancestor"
            },
            {
              "name": "limit",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "_isDescendantOfElementInstance",
          "description": "Check if a element is a descendant of another element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 898,
              "column": 1
            },
            "end": {
              "line": 911,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant",
              "type": "HTMLElement",
              "description": "Element to test"
            },
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "Ancestor element"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if\t element is a descendant"
          }
        },
        {
          "name": "resizerShouldNotify",
          "description": "Check if a element is a descendant of the currently selected element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 919,
              "column": 1
            },
            "end": {
              "line": 921,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resizable",
              "type": "HTMLElement",
              "description": "A descendant resizable element"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the element should be notified"
          }
        },
        {
          "name": "_onDescendantIronResize",
          "description": "Handles resize notifications from descendants.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 929,
              "column": 1
            },
            "end": {
              "line": 939,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "The resize event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 941,
              "column": 1
            },
            "end": {
              "line": 946,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyElementResize",
          "description": "Notifies a descendant resizable of the element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 954,
              "column": 1
            },
            "end": {
              "line": 976,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "defaultValue": "this.selectedElement",
              "description": "The element to search within for a resizable"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if descendant has been notified."
          }
        },
        {
          "name": "selectById",
          "description": "Select item by id.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 985,
              "column": 1
            },
            "end": {
              "line": 993,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "(String | Number)",
              "description": "The item's id"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_forwardItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 995,
              "column": 1
            },
            "end": {
              "line": 1006,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            },
            {
              "name": "item"
            },
            {
              "name": "idx"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderQueue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1008,
              "column": 1
            },
            "end": {
              "line": 1047,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderQueueProcess",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1049,
              "column": 1
            },
            "end": {
              "line": 1084,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "idx"
            }
          ]
        },
        {
          "name": "_onCachePurge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1086,
              "column": 1
            },
            "end": {
              "line": 1091,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_getItemId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1093,
              "column": 1
            },
            "end": {
              "line": 1095,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_updateHashForSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1097,
              "column": 1
            },
            "end": {
              "line": 1118,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelectedFromHash",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1120,
              "column": 1
            },
            "end": {
              "line": 1138,
              "column": 2
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 1139,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CosmozDataNav",
      "attributes": [
        {
          "name": "t",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-i18next/cosmoz-i18next.js",
            "start": {
              "line": 20,
              "column": 3
            },
            "end": {
              "line": 25,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "translatable"
        },
        {
          "name": "as",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 3
            },
            "end": {
              "line": 160,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "index-as",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 3
            },
            "end": {
              "line": 169,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "items",
          "description": "An array containing items from which a selection can be made.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 3
            },
            "end": {
              "line": 181,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "queue-length",
          "description": "The length of items array.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 3
            },
            "end": {
              "line": 190,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "has-items",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 3
            },
            "end": {
              "line": 196,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "elements-buffer",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 3
            },
            "end": {
              "line": 201,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "preload",
          "description": "Number of items after the currently selected one to preload.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 3
            },
            "end": {
              "line": 209,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected",
          "description": "The currently selected index.",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 3
            },
            "end": {
              "line": 219,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected-next",
          "description": "The index of the next element.",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 3
            },
            "end": {
              "line": 229,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected-element",
          "description": "The currently selected element (holder)",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 3
            },
            "end": {
              "line": 239,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-instance",
          "description": "The currently selected element (instance)",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 3
            },
            "end": {
              "line": 249,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected-item",
          "description": "The currently selected item, or `null` if no item is selected.",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 3
            },
            "end": {
              "line": 259,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "maintain-selection",
          "description": "True if cosmoz-data-nav should try to maintain selection when\n`items` change.",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 3
            },
            "end": {
              "line": 268,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "select-attribute",
          "description": "The attribute that elements which control the `selected` of this element\nshould have. The value of the attribute can be `-1` or `+1`.",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 3
            },
            "end": {
              "line": 277,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "animating",
          "description": "True if the element is currently animating.",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 3
            },
            "end": {
              "line": 286,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "reverse",
          "description": "True if selecting a element with a index smaller than the current one.",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 3
            },
            "end": {
              "line": 295,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-incomplete-fn",
          "description": "Function used to determine if a item is incomplete and needs to be preloaded.\nThe default values is a function that requires item to be a `Object`.",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 3
            },
            "end": {
              "line": 306,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Function | null | undefined"
        },
        {
          "name": "hash-param",
          "description": "The hash parameter to use for selecting an item.",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 3
            },
            "end": {
              "line": 313,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "id-path",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 3
            },
            "end": {
              "line": 329,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hidden-rendering",
          "description": "True if element should render items even if it is not visible.",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 3
            },
            "end": {
              "line": 337,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "queue-length-changed",
          "description": "Fired when the `queueLength` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-next-changed",
          "description": "Fired when the `selectedNext` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-element-changed",
          "description": "Fired when the `selectedElement` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-instance-changed",
          "description": "Fired when the `selectedInstance` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cosmoz-data-nav",
      "mixins": [
        "translatable"
      ]
    }
  ]
}
