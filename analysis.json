{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cosmoz-data-nav` provides a way to show each individual item of a list in a queue-style behavior\nto the user.\n\nA list of `items` and a `<template>` for each item is used to render the queue, and methods to\nslide to next/previous item is exposed.\n\nFor performance and to avoid DOM bloat, the items are \"lazy-rendered\" and the `maxPreload` setting\ndecides how many _upcoming_ items that should be pre-rendered.\n\nIt can also be \"lazy-loaded\" when each item's details aren't available, by instead of (or in addition to)\n`items` also set an `idList` array with identifiers for each item.\nIf `cosmoz-data-nav` tries to render an item that is missing but an id exists for the position, it will fire\na `need-data` event to announce this and expect an `object-details-fetched` event when the item details are\navailable. This event should have an `id` property that corresponds to the `id` requested and also an `object`\nproperty with the item. This design enables parallelization since multiple items can be requested at once,\nand responded to in an unordered, async manner. Also, `cosmoz-data-nav` does not need to be aware of any\ntemplate-design or item model.\n\nExample:\n\n    <cosmoz-data-nav id-list=\"[[ getItemIds(myList) ]]\" on-need-data=\"triggerDetailFetch\">\n        <template>\n            <neon-animatable class=\"vertical layout fit\">\n                <my-view>\n                    <paper-icon-button slot=\"actions\" disabled$=\"[[ isFirstItem ]]\" icon=\"chevron-left\" on-click=\"selectPrevious\"></paper-icon-button>\n                    <paper-icon-button slot=\"actions\" disabled$=\"[[ isLastItem ]]\" icon=\"chevron-right\" on-click=\"selectNext\"></paper-icon-button>\n                </my-view>\n            </neon-animatable>\n        </template>\n    </cosmoz-data-nav>",
      "summary": "",
      "path": "cosmoz-data-nav.js",
      "properties": [
        {
          "name": "as",
          "type": "string",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 3
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"item\""
        },
        {
          "name": "indexAs",
          "type": "string",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 3
            },
            "end": {
              "line": 28,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"index\""
        },
        {
          "name": "atFirstItem",
          "type": "boolean",
          "description": "True if first item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 3
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "atLastItem",
          "type": "boolean",
          "description": "True if last item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "items",
          "type": "Array",
          "description": "An array containing items from which a selection can be made.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 58,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_itemsChanged\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "queueLength",
          "type": "number",
          "description": "The length of items array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 3
            },
            "end": {
              "line": 67,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "preload",
          "type": "number",
          "description": "Number of items after the currently selected one to preload.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 3
            },
            "end": {
              "line": 75,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "2"
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "description": "The currently selected index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 3
            },
            "end": {
              "line": 84,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateSelected\""
            }
          }
        },
        {
          "name": "selectedIndexNext",
          "type": "number",
          "description": "The index of the next element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "The currently selected item, or `null` if no item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 3
            },
            "end": {
              "line": 103,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "selectAttribute",
          "type": "string",
          "description": "The attribute that elements which control the `selectedIndex` of this element\nshould have. The value of the attribute can be `next` or `previous`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 3
            },
            "end": {
              "line": 112,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cosmoz-data-nav-select\""
        },
        {
          "name": "_entryAnimation",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 3
            },
            "end": {
              "line": 117,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"slide-from-left-animation\""
        },
        {
          "name": "_exitAnimation",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 3
            },
            "end": {
              "line": 121,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"slide-right-animation\""
        }
      ],
      "methods": [
        {
          "name": "templatize",
          "description": "Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\nfor the provided template.  This method should be called once per\ntemplate to prepare an element for stamping the template, followed\nby `stamp` to create new instances of the template.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to prepare"
            },
            {
              "name": "mutableData",
              "type": "boolean=",
              "description": "When `true`, the generated class will skip\n  strict dirty-checking for objects and arrays (always consider them to\n  be \"dirty\"). Defaults to false."
            }
          ],
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "stamp",
          "description": "Creates an instance of the template prepared by `templatize`.  The object\nreturned is an instance of the anonymous class generated by `templatize`\nwhose `root` property is a document fragment containing newly cloned\ntemplate content, and which has property accessors corresponding to\nproperties referenced in template bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object=",
              "description": "Object containing initial property values to\n  populate into the template bindings."
            }
          ],
          "return": {
            "type": "TemplateInstanceBase",
            "desc": "Returns the created instance of\nthe template prepared by `templatize`."
          },
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "modelForElement",
          "description": "Returns the template \"model\" (`TemplateInstance`) associated with\na given element, which serves as the binding scope for the template\ninstance the element is contained in.  A template model should be used\nto manipulate data associated with this template instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el",
              "type": "HTMLElement",
              "description": "Element for which to return a template model."
            }
          ],
          "return": {
            "type": "TemplateInstanceBase",
            "desc": "Model representing the binding scope for\n  the element."
          },
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "created",
          "description": "Polymer `created` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "Polymer `ready` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 149,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Polymer `attached` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Polymer `detached` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_spawn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "selectNext",
          "description": "Select next item in the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectPrevious",
          "description": "Select previous item in the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setItemById",
          "description": "Replace an id in the `items` element list with the full data of the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "type",
              "description": "The id currently stored in the `items` array"
            },
            {
              "name": "item",
              "type": "Object",
              "description": "The full data of object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_ensureTemplatized",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_forwardParentProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_forwardParentPath",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 277,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_itemsChanged",
          "description": "Observes full changes to `items` properties\nand replaces cached items with full data if available.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 302,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "type",
              "description": "description"
            }
          ],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_updateSelected",
          "description": "Observes changed to `selectedIndex` property and\nupdates related properties and the `selected` page.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedIndex",
              "type": "type",
              "description": "description"
            }
          ],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_preload",
          "description": "Preloads items that are not loaded depending on the currently\nselected item and the `preload` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_synchronize",
          "description": "Syncronizes the `items` data with the created template instances\ndepending on the currently selected item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 371,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_forwardItem",
          "description": "Forwards an item from `items` property to a template instance.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 2
            },
            "end": {
              "line": 388,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "TemplateInstance",
              "description": "The template instance"
            },
            {
              "name": "item",
              "type": "Object",
              "description": "The Item to forward"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTap",
          "description": "Handle `tap` event and finds the closest item to the rootTarget that has a `selectAttribute` attribute.\nIf the attribute is `next` or `previous` the `selectNext` or `selectPrevious` action is called.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 2
            },
            "end": {
              "line": 408,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "The tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectById",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 9
        },
        "end": {
          "line": 421,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "as",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 3
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "index-as",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 3
            },
            "end": {
              "line": 28,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "at-first-item",
          "description": "True if first item is selected.",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 3
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "at-last-item",
          "description": "True if last item is selected.",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "An array containing items from which a selection can be made.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 58,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "queue-length",
          "description": "The length of items array.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 3
            },
            "end": {
              "line": 67,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "preload",
          "description": "Number of items after the currently selected one to preload.",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 3
            },
            "end": {
              "line": 75,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-index",
          "description": "The currently selected index.",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 3
            },
            "end": {
              "line": 84,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-index-next",
          "description": "The index of the next element.",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-item",
          "description": "The currently selected item, or `null` if no item is selected.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 3
            },
            "end": {
              "line": 103,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "select-attribute",
          "description": "The attribute that elements which control the `selectedIndex` of this element\nshould have. The value of the attribute can be `next` or `previous`.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 3
            },
            "end": {
              "line": 112,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "at-first-item-changed",
          "description": "Fired when the `atFirstItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "at-last-item-changed",
          "description": "Fired when the `atLastItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "queue-length-changed",
          "description": "Fired when the `queueLength` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-index-changed",
          "description": "Fired when the `selectedIndex` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-index-next-changed",
          "description": "Fired when the `selectedIndexNext` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "cosmoz-data-nav.html",
            "start": {
              "line": 53,
              "column": 3
            },
            "end": {
              "line": 53,
              "column": 27
            }
          }
        }
      ],
      "tagname": "cosmoz-data-nav"
    }
  ]
}
