{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cosmoz-data-nav` provides a way to show each individual item of a list in a queue-style behavior\nto the user.\n\nA list of `items` and a `<template>` for each item is used to render the queue, and methods to\nslide to next/previous item is exposed.\n\nFor performance and to avoid DOM bloat, the items are \"lazy-rendered\" and the `maxPreload` setting\ndecides how many _upcoming_ items that should be pre-rendered.\n\nIt can also be \"lazy-loaded\" when each item's details aren't available, by instead of (or in addition to)\n`items` also set an `idList` array with identifiers for each item.\nIf `cosmoz-data-nav` tries to render an item that is missing but an id exists for the position, it will fire\na `need-data` event to announce this and expect an `object-details-fetched` event when the item details are\navailable. This event should have an `id` property that corresponds to the `id` requested and also an `object`\nproperty with the item. This design enables parallelization since multiple items can be requested at once,\nand responded to in an unordered, async manner. Also, `cosmoz-data-nav` does not need to be aware of any\ntemplate-design or item model.\n\nExample:\n\n    <cosmoz-data-nav id-list=\"[[ getItemIds(myList) ]]\" on-need-data=\"triggerDetailFetch\">\n        <template>\n            <neon-animatable class=\"vertical layout fit\">\n                <my-view>\n                    <paper-icon-button slot=\"actions\" disabled$=\"[[ isFirstItem ]]\" icon=\"chevron-left\" on-click=\"selectPrevious\"></paper-icon-button>\n                    <paper-icon-button slot=\"actions\" disabled$=\"[[ isLastItem ]]\" icon=\"chevron-right\" on-click=\"selectNext\"></paper-icon-button>\n                </my-view>\n            </neon-animatable>\n        </template>\n    </cosmoz-data-nav>",
      "summary": "",
      "path": "cosmoz-data-nav.js",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "as",
          "type": "string",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 3
            },
            "end": {
              "line": 35,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"item\""
        },
        {
          "name": "indexAs",
          "type": "string",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 3
            },
            "end": {
              "line": 44,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"index\""
        },
        {
          "name": "nextDisabled",
          "type": "boolean",
          "description": "True if first item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 3
            },
            "end": {
              "line": 54,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "prevDisabled",
          "type": "boolean",
          "description": "True if last item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 3
            },
            "end": {
              "line": 64,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "An array containing items from which a selection can be made.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 3
            },
            "end": {
              "line": 76,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_itemsChanged\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "queueLength",
          "type": "number",
          "description": "The length of items array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 3
            },
            "end": {
              "line": 85,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "preload",
          "type": "number",
          "description": "Number of items after the currently selected one to preload.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 3
            },
            "end": {
              "line": 93,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "2"
        },
        {
          "name": "selected",
          "type": "number",
          "description": "The currently selected index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 3
            },
            "end": {
              "line": 102,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateSelected\""
            }
          }
        },
        {
          "name": "selectedNext",
          "type": "number",
          "description": "The index of the next element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 3
            },
            "end": {
              "line": 112,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "The currently selected item, or `null` if no item is selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 3
            },
            "end": {
              "line": 121,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "selectAttribute",
          "type": "string",
          "description": "The attribute that elements which control the `selected` of this element\nshould have. The value of the attribute can be `next` or `previous`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"cosmoz-data-nav-select\""
        },
        {
          "name": "animating",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 3
            },
            "end": {
              "line": 136,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "reverse",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 3
            },
            "end": {
              "line": 142,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "isIncompleteFn",
          "type": "Function",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 3
            },
            "end": {
              "line": 151,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_isVisible",
          "type": "Function",
          "description": "True if the current element is visible.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 498,
              "column": 2
            },
            "end": {
              "line": 500,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "templatize",
          "description": "Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\nfor the provided template.  This method should be called once per\ntemplate to prepare an element for stamping the template, followed\nby `stamp` to create new instances of the template.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to prepare"
            },
            {
              "name": "mutableData",
              "type": "boolean=",
              "description": "When `true`, the generated class will skip\n  strict dirty-checking for objects and arrays (always consider them to\n  be \"dirty\"). Defaults to false."
            }
          ],
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "stamp",
          "description": "Creates an instance of the template prepared by `templatize`.  The object\nreturned is an instance of the anonymous class generated by `templatize`\nwhose `root` property is a document fragment containing newly cloned\ntemplate content, and which has property accessors corresponding to\nproperties referenced in template bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object=",
              "description": "Object containing initial property values to\n  populate into the template bindings."
            }
          ],
          "return": {
            "type": "TemplateInstanceBase",
            "desc": "Returns the created instance of\nthe template prepared by `templatize`."
          },
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "modelForElement",
          "description": "Returns the template \"model\" (`TemplateInstance`) associated with\na given element, which serves as the binding scope for the template\ninstance the element is contained in.  A template model should be used\nto manipulate data associated with this template instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/polymer/lib/legacy/templatizer-behavior.html",
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el",
              "type": "HTMLElement",
              "description": "Element for which to return a template model."
            }
          ],
          "return": {
            "type": "TemplateInstanceBase",
            "desc": "Model representing the binding scope for\n  the element."
          },
          "inheritedFrom": "Polymer.Templatizer"
        },
        {
          "name": "created",
          "description": "Polymer `created` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Polymer `attached` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Polymer `detached` livecycle function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 519,
              "column": 2
            },
            "end": {
              "line": 524,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 2
            },
            "end": {
              "line": 517,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onNodesChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_spawn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createInstance",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 243,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_ensureTemplatized",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "select",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ]
        },
        {
          "name": "setItemById",
          "description": "Replace an id in the `items` element list with the full data of the item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "type",
              "description": "The id currently stored in the `items` array"
            },
            {
              "name": "item",
              "type": "Object",
              "description": "The full data of object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_forwardParentProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 2
            },
            "end": {
              "line": 304,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_forwardParentPath",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 2
            },
            "end": {
              "line": 312,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_forwardHostPropV2",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 2
            },
            "end": {
              "line": 320,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_itemsChanged",
          "description": "Observes full changes to `items` properties\nand replaces cached items with full data if available.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 346,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "type",
              "description": "description"
            }
          ],
          "return": {
            "type": "type",
            "desc": "description"
          }
        },
        {
          "name": "_updateSelection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "forward",
              "defaultValue": "false"
            }
          ]
        },
        {
          "name": "_updateSelected",
          "description": "Observes changed to `selected` property and\nupdates related properties and the `selected` page.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 397,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected = this.selected"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 2
            },
            "end": {
              "line": 413,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_preload",
          "description": "Preloads items that are not loaded depending on the currently\nselected item and the `preload` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 443,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_forwardItem",
          "description": "Forwards an item from `items` property to a template instance.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "The element"
            },
            {
              "name": "item",
              "type": "Object",
              "description": "The item to forward"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTap",
          "description": "Handle `tap` event and finds the closest item to the rootTarget that has a `selectAttribute` attribute.\nIf the attribute is `next` or `previous` the `selectNext` or `selectPrevious` action is called.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 2
            },
            "end": {
              "line": 493,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "The tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resizerShouldBeNotified",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 2
            },
            "end": {
              "line": 504,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ]
        },
        {
          "name": "_notifyElementResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 526,
              "column": 2
            },
            "end": {
              "line": 539,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ]
        },
        {
          "name": "selectById",
          "description": "Select item by id.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 558,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "(String|Number)",
              "description": "The item's id"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 9
        },
        "end": {
          "line": 559,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "as",
          "description": "The name of the variable to add to the binding scope for the array\nelement associated with a template instance.",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 3
            },
            "end": {
              "line": 35,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "index-as",
          "description": "The name of the variable to add to the binding scope with the index\nfor the item.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 3
            },
            "end": {
              "line": 44,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "next-disabled",
          "description": "True if first item is selected.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 3
            },
            "end": {
              "line": 54,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "prev-disabled",
          "description": "True if last item is selected.",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 3
            },
            "end": {
              "line": 64,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "An array containing items from which a selection can be made.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 3
            },
            "end": {
              "line": 76,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "queue-length",
          "description": "The length of items array.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 3
            },
            "end": {
              "line": 85,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "preload",
          "description": "Number of items after the currently selected one to preload.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 3
            },
            "end": {
              "line": 93,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected",
          "description": "The currently selected index.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 3
            },
            "end": {
              "line": 102,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-next",
          "description": "The index of the next element.",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 3
            },
            "end": {
              "line": 112,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "selected-item",
          "description": "The currently selected item, or `null` if no item is selected.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 3
            },
            "end": {
              "line": 121,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "select-attribute",
          "description": "The attribute that elements which control the `selected` of this element\nshould have. The value of the attribute can be `next` or `previous`.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "animating",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 3
            },
            "end": {
              "line": 136,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "reverse",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 3
            },
            "end": {
              "line": 142,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-incomplete-fn",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 3
            },
            "end": {
              "line": 151,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Function"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "next-disabled-changed",
          "description": "Fired when the `nextDisabled` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "prev-disabled-changed",
          "description": "Fired when the `prevDisabled` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "queue-length-changed",
          "description": "Fired when the `queueLength` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-next-changed",
          "description": "Fired when the `selectedNext` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "cosmoz-data-nav.html",
            "start": {
              "line": 79,
              "column": 3
            },
            "end": {
              "line": 79,
              "column": 16
            }
          }
        }
      ],
      "tagname": "cosmoz-data-nav"
    }
  ]
}
